# Generated by Django 5.2.5 on 2025-09-27 05:22

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('ubicacion', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Vehiculo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('placa_int', models.CharField(max_length=10, unique=True, verbose_name='Placa Interna')),
                ('placa_rod', models.CharField(blank=True, max_length=10, null=True, unique=True, verbose_name='Placa Rodaje')),
                ('vin', models.CharField(max_length=30, unique=True, verbose_name='N° de serie')),
                ('num_motor', models.CharField(max_length=30, verbose_name='N° de motor')),
                ('marca', models.CharField(max_length=50, verbose_name='Marca')),
                ('modelo', models.CharField(max_length=50, verbose_name='Modelo')),
                ('anio', models.PositiveIntegerField(verbose_name='Año')),
                ('tipo', models.CharField(choices=[('AMBULANCIA', 'AMBULANCIA'), ('AUTOMOVIL', 'AUTOMOVIL'), ('AUTOMOVIL SEDAN', 'AUTOMOVIL SEDAN'), ('BOTE', 'BOTE'), ('CAMION BARANDA', 'CAMION BARANDA'), ('CAMIONETA', 'CAMIONETA'), ('CAMIONETA FUNERARIO', 'CAMIONETA FUNERARIO'), ('CAMIONETA PANEL', 'CAMIONETA PANEL'), ('CAMIONETA PICK UP', 'CAMIONETA PICK UP'), ('CAMIONETA SUV', 'CAMIONETA SUV'), ('MINIBUS', 'MINIBUS'), ('MICROBUS', 'MICROBUS'), ('MOTO ACUATICA', 'MOTO ACUATICA'), ('MOTOCICLETA', 'MOTOCICLETA'), ('MOTOR FUERA DE BORDA ', 'MOTOR FUERA DE BORDA '), ('OMNIBUS', 'OMNIBUS'), ('PORTATROPA', 'PORTATROPA'), ('STATION WAGON', 'STATION WAGON'), ('TRIMOTO', 'TRIMOTO')], default='', max_length=30, verbose_name='Tipo')),
                ('kilometraje', models.DecimalField(decimal_places=1, max_digits=18, verbose_name='Kilometraje')),
                ('estado_vehi', models.CharField(choices=[('OPERATIVO', 'OPERATIVO'), ('INOPERATIVO', 'INOPERATIVO'), ('INOP. IRRECUP.', 'INOP. IRRECUP.'), ('INOP. RECUP.', 'INOP. RECUP.'), ('RECUPERABLE', 'RECUPERABLE'), ('IRRECUPERABLE', 'IRRECUPERABLE'), ('MANTENIMIENTO', 'MANTENIMIENTO')], default='OPERATIVO', max_length=30, verbose_name='Estado del vehículo')),
                ('estado_odo', models.CharField(choices=[('OPERATIVO', 'OPERATIVO'), ('INOPERATIVO', 'INOPERATIVO')], default='OPERATIVO', max_length=30, verbose_name='Estado del odometro')),
                ('fecha_adquisicion', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de adquisición')),
                ('tipo_combustible', models.CharField(choices=[('GASOLINA', 'GASOLINA'), ('DIESEL', 'DIESEL'), ('GLP', 'GLP'), ('GNV', 'GNV')], default='Gasolina', max_length=20, verbose_name='Tipo de Combustible')),
                ('procedencia', models.CharField(blank=True, max_length=50, null=True, verbose_name='Procedencia')),
                ('funcion', models.CharField(choices=[('ADMINISTRATIVO', 'ADMINISTRATIVO'), ('OPERATIVO', 'OPERATIVO'), ('PATRULLAJE', 'PATRULLAJE'), ('ASIG. AL CARGO', 'ADMASIG. AL CARGO'), ('INOPERATIVO', 'INOPERATIVO')], default='', max_length=30, verbose_name='Función policial')),
                ('valor', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True, verbose_name='Valor')),
                ('motivo_ino', models.TextField(blank=True, null=True, verbose_name='Motivo o causa de la inoperatividad')),
                ('fecha_ino', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de inoperatividad')),
                ('resolucion_baja', models.CharField(blank=True, max_length=30, null=True, verbose_name='Resolución de la Baja')),
                ('fecha_baja', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de la Baja')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('subunidad', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ubicacion.subunidad', verbose_name='Sub Unidad Asignada')),
                ('ubicacion_ino', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ubicacion_inoperativo', to='ubicacion.subunidad', verbose_name='Ubicación del vehículo inoperativo')),
            ],
            options={
                'verbose_name': 'Vehículo',
                'verbose_name_plural': 'Vehículos',
                'ordering': ['created'],
            },
        ),
    ]
